service: valida-api-s3
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs14.x
  iam:
    role:
      statements:
        - Effect: Allow
          Action: 'dynamodb:*'
          Resource: arn:aws:dynamodb:us-east-1:471893938953:table/usersTable
        - Effect: Allow
          Action: 's3:*'
          Resource: arn:aws:s3:::bucket-serverless-course-bucket-alex-reyes/*    
  environment:
   BUCKET: bucket-serverless-course-bucket-alex-reyes


plugins:
  - serverless-dynamodb-local
layers: 
  base: 
    name: "prod-dependencies"
    package:
      artifact: nodejs.zip



functions:
  function1:
     handler: index.handler
     layers:
      - { Ref: BaseLambdaLayer } 
      - arn:aws:lambda:us-east-1:267352610200:layer:prod-dependencies:1
     events:
      - http:
          path: users/{id}
          method: GET
          request:
            parameters:
              paths:
                id: true
  signedURL:
     handler: signedurl/handler.signedS3URL
     package: 
      patterns:
        - "signedurl/handler.js"
     events:
      - http:
          path: signedurl
          method: GET
          request:
            parameters:
              querystrings:
                   filename: true




  create-users:
    handler: index.handler
    events:
      - http:
          path: users
          method: POST
          request:
            schemas:
             application/json: ${file(schemas/user-schema.json)}

  update-users:
    handler: index.handler
    events:
      - http:
          path: users/{id}
          method: PATCH
          request:
            parameters:
              paths:
                id: true
            schemas:  
                application/json: ${file(schemas/geographical-location.schema.json)}



resources:
  Resources:
    MyBucket:
            Type: 'AWS::S3::Bucket'
            Properties:
              BucketName: bucket-serverless-course-bucket-alex-reyes
              PublicAccessBlockConfiguration:
                BlockPublicAcls: false
                BlockPublicPolicy: false
                IgnorePublicAcls: false
                RestrictPublicBuckets: false
    MyBucketPolicy:
            Type: 'AWS::S3::BucketPolicy'
            Properties:
              Bucket:
                Ref: 'MyBucket'
              PolicyDocument:
                Version: '2012-10-17'
                Statement:
                  - Effect: Allow
                    Principal: '*'
                    Action: 's3:GetObject'
                    Resource:
                      Fn::Join:
                        - ''
                        - - 'arn:aws:s3:::'
                          - Ref: 'MyBucket'
                          - '/*'


  